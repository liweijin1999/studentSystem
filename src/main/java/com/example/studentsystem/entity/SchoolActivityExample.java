package com.example.studentsystem.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SchoolActivityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public SchoolActivityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andActivityidIsNull() {
            addCriterion("activityID is null");
            return (Criteria) this;
        }

        public Criteria andActivityidIsNotNull() {
            addCriterion("activityID is not null");
            return (Criteria) this;
        }

        public Criteria andActivityidEqualTo(Integer value) {
            addCriterion("activityID =", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotEqualTo(Integer value) {
            addCriterion("activityID <>", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidGreaterThan(Integer value) {
            addCriterion("activityID >", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidGreaterThanOrEqualTo(Integer value) {
            addCriterion("activityID >=", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidLessThan(Integer value) {
            addCriterion("activityID <", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidLessThanOrEqualTo(Integer value) {
            addCriterion("activityID <=", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidIn(List<Integer> values) {
            addCriterion("activityID in", values, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotIn(List<Integer> values) {
            addCriterion("activityID not in", values, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidBetween(Integer value1, Integer value2) {
            addCriterion("activityID between", value1, value2, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotBetween(Integer value1, Integer value2) {
            addCriterion("activityID not between", value1, value2, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivitynameIsNull() {
            addCriterion("activityName is null");
            return (Criteria) this;
        }

        public Criteria andActivitynameIsNotNull() {
            addCriterion("activityName is not null");
            return (Criteria) this;
        }

        public Criteria andActivitynameEqualTo(String value) {
            addCriterion("activityName =", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameNotEqualTo(String value) {
            addCriterion("activityName <>", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameGreaterThan(String value) {
            addCriterion("activityName >", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameGreaterThanOrEqualTo(String value) {
            addCriterion("activityName >=", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameLessThan(String value) {
            addCriterion("activityName <", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameLessThanOrEqualTo(String value) {
            addCriterion("activityName <=", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameLike(String value) {
            addCriterion("activityName like", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameNotLike(String value) {
            addCriterion("activityName not like", value, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameIn(List<String> values) {
            addCriterion("activityName in", values, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameNotIn(List<String> values) {
            addCriterion("activityName not in", values, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameBetween(String value1, String value2) {
            addCriterion("activityName between", value1, value2, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitynameNotBetween(String value1, String value2) {
            addCriterion("activityName not between", value1, value2, "activityname");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionIsNull() {
            addCriterion("activityDescription is null");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionIsNotNull() {
            addCriterion("activityDescription is not null");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionEqualTo(String value) {
            addCriterion("activityDescription =", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionNotEqualTo(String value) {
            addCriterion("activityDescription <>", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionGreaterThan(String value) {
            addCriterion("activityDescription >", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("activityDescription >=", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionLessThan(String value) {
            addCriterion("activityDescription <", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionLessThanOrEqualTo(String value) {
            addCriterion("activityDescription <=", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionLike(String value) {
            addCriterion("activityDescription like", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionNotLike(String value) {
            addCriterion("activityDescription not like", value, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionIn(List<String> values) {
            addCriterion("activityDescription in", values, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionNotIn(List<String> values) {
            addCriterion("activityDescription not in", values, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionBetween(String value1, String value2) {
            addCriterion("activityDescription between", value1, value2, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitydescriptionNotBetween(String value1, String value2) {
            addCriterion("activityDescription not between", value1, value2, "activitydescription");
            return (Criteria) this;
        }

        public Criteria andActivitystartIsNull() {
            addCriterion("activityStart is null");
            return (Criteria) this;
        }

        public Criteria andActivitystartIsNotNull() {
            addCriterion("activityStart is not null");
            return (Criteria) this;
        }

        public Criteria andActivitystartEqualTo(Date value) {
            addCriterion("activityStart =", value, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartNotEqualTo(Date value) {
            addCriterion("activityStart <>", value, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartGreaterThan(Date value) {
            addCriterion("activityStart >", value, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartGreaterThanOrEqualTo(Date value) {
            addCriterion("activityStart >=", value, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartLessThan(Date value) {
            addCriterion("activityStart <", value, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartLessThanOrEqualTo(Date value) {
            addCriterion("activityStart <=", value, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartIn(List<Date> values) {
            addCriterion("activityStart in", values, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartNotIn(List<Date> values) {
            addCriterion("activityStart not in", values, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartBetween(Date value1, Date value2) {
            addCriterion("activityStart between", value1, value2, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivitystartNotBetween(Date value1, Date value2) {
            addCriterion("activityStart not between", value1, value2, "activitystart");
            return (Criteria) this;
        }

        public Criteria andActivityendIsNull() {
            addCriterion("activityEnd is null");
            return (Criteria) this;
        }

        public Criteria andActivityendIsNotNull() {
            addCriterion("activityEnd is not null");
            return (Criteria) this;
        }

        public Criteria andActivityendEqualTo(Date value) {
            addCriterion("activityEnd =", value, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendNotEqualTo(Date value) {
            addCriterion("activityEnd <>", value, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendGreaterThan(Date value) {
            addCriterion("activityEnd >", value, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendGreaterThanOrEqualTo(Date value) {
            addCriterion("activityEnd >=", value, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendLessThan(Date value) {
            addCriterion("activityEnd <", value, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendLessThanOrEqualTo(Date value) {
            addCriterion("activityEnd <=", value, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendIn(List<Date> values) {
            addCriterion("activityEnd in", values, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendNotIn(List<Date> values) {
            addCriterion("activityEnd not in", values, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendBetween(Date value1, Date value2) {
            addCriterion("activityEnd between", value1, value2, "activityend");
            return (Criteria) this;
        }

        public Criteria andActivityendNotBetween(Date value1, Date value2) {
            addCriterion("activityEnd not between", value1, value2, "activityend");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table schoolactivity
     *
     * @mbggenerated do_not_delete_during_merge Wed Apr 20 00:08:44 BST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table schoolactivity
     *
     * @mbggenerated Wed Apr 20 00:08:44 BST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}